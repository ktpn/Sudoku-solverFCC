{
  "{\"sourceRoot\":\"/home/ky/repos/sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ky/repos/sudoku-solver\",\"filename\":\"/home/ky/repos/sudoku-solver/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/ky/repos/sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ky/repos/sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ky/repos/sudoku-solver",
      "filename": "/home/ky/repos/sudoku-solver/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/ky/repos/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ky/repos/sudoku-solver/routes/api.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ky/repos/sudoku-solver/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ky/repos/sudoku-solver/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar SudokuSolver = require(\"../controllers/sudoku-solver.js\");\n\nmodule.exports = function (app) {\n  var solver = new SudokuSolver();\n  app.route(\"/api/check\").post(function (req, res) {\n    var _req$body = req.body,\n        puzzle = _req$body.puzzle,\n        coordinate = _req$body.coordinate,\n        value = _req$body.value;\n\n    if (!puzzle || !coordinate || !value) {\n      res.json({\n        error: \"Required field(s) missing\"\n      });\n      return;\n    }\n\n    var row = coordinate.split(\"\")[0];\n    var column = coordinate.split(\"\")[1];\n\n    if (coordinate.length !== 2 || !/[a-i]/i.test(row) || !/[1-9]/i.test(column)) {\n      console.log(\"invalid coordinate :>> \");\n      res.json({\n        error: \"Invalid coordinate\"\n      });\n      return;\n    }\n\n    var validValue = solver.checkValue(value); //if (!/[1-9]/.test(value)) {\n\n    if (!validValue) {\n      res.json({\n        error: \"Invalid value\"\n      });\n      return;\n    }\n\n    if (puzzle.length != 81) {\n      res.json({\n        error: \"Expected puzzle to be 81 characters long\"\n      });\n      return;\n    }\n\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({\n        error: \"Invalid characters in puzzle\"\n      });\n      return;\n    }\n\n    var validCol = solver.checkColPlacement(puzzle, row, column, value);\n    var validReg = solver.checkRegionPlacement(puzzle, row, column, value);\n    var validRow = solver.checkRowPlacement(puzzle, row, column, value);\n    var conflicts = [];\n\n    if (validCol && validReg && validRow) {\n      res.json({\n        valid: true\n      });\n    } else {\n      if (!validRow) {\n        conflicts.push(\"row\");\n      }\n\n      if (!validCol) {\n        conflicts.push(\"column\");\n      }\n\n      if (!validReg) {\n        conflicts.push(\"region\");\n      }\n\n      res.json({\n        valid: false,\n        conflict: conflicts\n      });\n    }\n  });\n  app.route(\"/api/solve\").post(function (req, res) {\n    var puzzle = req.body.puzzle;\n\n    if (!puzzle) {\n      res.json({\n        error: \"Required field missing\"\n      });\n      return;\n    }\n\n    if (puzzle.length != 81) {\n      res.json({\n        error: \"Expected puzzle to be 81 characters long\"\n      });\n      return;\n    }\n\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({\n        error: \"Invalid characters in puzzle\"\n      });\n      return;\n    }\n\n    var solvedString = solver.solve(puzzle);\n\n    if (!solvedString) {\n      res.json({\n        error: \"Puzzle cannot be solved\"\n      });\n    } else {\n      res.json({\n        solution: solvedString\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJTdWRva3VTb2x2ZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInNvbHZlciIsInJvdXRlIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiLCJwdXp6bGUiLCJjb29yZGluYXRlIiwidmFsdWUiLCJqc29uIiwiZXJyb3IiLCJyb3ciLCJzcGxpdCIsImNvbHVtbiIsImxlbmd0aCIsInRlc3QiLCJjb25zb2xlIiwibG9nIiwidmFsaWRWYWx1ZSIsImNoZWNrVmFsdWUiLCJ2YWxpZENvbCIsImNoZWNrQ29sUGxhY2VtZW50IiwidmFsaWRSZWciLCJjaGVja1JlZ2lvblBsYWNlbWVudCIsInZhbGlkUm93IiwiY2hlY2tSb3dQbGFjZW1lbnQiLCJjb25mbGljdHMiLCJ2YWxpZCIsInB1c2giLCJjb25mbGljdCIsInNvbHZlZFN0cmluZyIsInNvbHZlIiwic29sdXRpb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFlBQVksR0FBR0MsT0FBTyxDQUFDLGlDQUFELENBQTVCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlO0FBQzlCLE1BQUlDLE1BQU0sR0FBRyxJQUFJTCxZQUFKLEVBQWI7QUFFQUksRUFBQUEsR0FBRyxDQUFDRSxLQUFKLENBQVUsWUFBVixFQUF3QkMsSUFBeEIsQ0FBNkIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxvQkFDSEQsR0FBRyxDQUFDRSxJQUREO0FBQUEsUUFDakNDLE1BRGlDLGFBQ2pDQSxNQURpQztBQUFBLFFBQ3pCQyxVQUR5QixhQUN6QkEsVUFEeUI7QUFBQSxRQUNiQyxLQURhLGFBQ2JBLEtBRGE7O0FBRXpDLFFBQUksQ0FBQ0YsTUFBRCxJQUFXLENBQUNDLFVBQVosSUFBMEIsQ0FBQ0MsS0FBL0IsRUFBc0M7QUFDcENKLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFU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QUssRUFBRTtBQUFULE9BQVQ7QUFDQTtBQUNEOztBQUNELFFBQUlKLE1BQU0sQ0FBQ1EsTUFBUCxJQUFpQixFQUFyQixFQUF5QjtBQUN2QlYsTUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVM7QUFBRUMsUUFBQUEsS0FBSyxFQUFFO0FBQVQsT0FBVDtBQUNBO0FBQ0Q7O0FBQ0QsUUFBSSxXQUFXSyxJQUFYLENBQWdCVCxNQUFoQixDQUFKLEVBQTZCO0FBQzNCRixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFUO0FBQ0E7QUFDRDs7QUFDRCxRQUFJb0IsWUFBWSxHQUFHOUIsTUFBTSxDQUFDK0IsS0FBUCxDQUFhekIsTUFBYixDQUFuQjs7QUFDQSxRQUFJLENBQUN3QixZQUFMLEVBQW1CO0FBQ2pCMUIsTUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVM7QUFBRUMsUUFBQUEsS0FBSyxFQUFFO0FBQVQsT0FBVDtBQUNELEtBRkQsTUFFTztBQUNMTixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUztBQUFFdUIsUUFBQUEsUUFBUSxFQUFFRjtBQUFaLE9BQVQ7QUFDRDtBQUNGLEdBcEJEO0FBcUJELENBM0VEIiwic291cmNlUm9vdCI6Ii9ob21lL2t5L3JlcG9zL3N1ZG9rdS1zb2x2ZXIvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBTdWRva3VTb2x2ZXIgPSByZXF1aXJlKFwiLi4vY29udHJvbGxlcnMvc3Vkb2t1LXNvbHZlci5qc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXBwKSB7XG4gIGxldCBzb2x2ZXIgPSBuZXcgU3Vkb2t1U29sdmVyKCk7XG5cbiAgYXBwLnJvdXRlKFwiL2FwaS9jaGVja1wiKS5wb3N0KChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgcHV6emxlLCBjb29yZGluYXRlLCB2YWx1ZSB9ID0gcmVxLmJvZHk7XG4gICAgaWYgKCFwdXp6bGUgfHwgIWNvb3JkaW5hdGUgfHwgIXZhbHVlKSB7XG4gICAgICByZXMuanNvbih7IGVycm9yOiBcIlJlcXVpcmVkIGZpZWxkKHMpIG1pc3NpbmdcIiB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgcm93ID0gY29vcmRpbmF0ZS5zcGxpdChcIlwiKVswXTtcbiAgICBjb25zdCBjb2x1bW4gPSBjb29yZGluYXRlLnNwbGl0KFwiXCIpWzFdO1xuICAgIGlmIChcbiAgICAgIGNvb3JkaW5hdGUubGVuZ3RoICE9PSAyIHx8XG4gICAgICAhL1thLWldL2kudGVzdChyb3cpIHx8XG4gICAgICAhL1sxLTldL2kudGVzdChjb2x1bW4pXG4gICAgKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImludmFsaWQgY29vcmRpbmF0ZSA6Pj4gXCIpO1xuICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJJbnZhbGlkIGNvb3JkaW5hdGVcIiB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHZhbGlkVmFsdWUgPSBzb2x2ZXIuY2hlY2tWYWx1ZSh2YWx1ZSlcbiAgICAvL2lmICghL1sxLTldLy50ZXN0KHZhbHVlKSkge1xuICAgIGlmICghdmFsaWRWYWx1ZSkge1xuICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJJbnZhbGlkIHZhbHVlXCIgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChwdXp6bGUubGVuZ3RoICE9IDgxKSB7XG4gICAgICByZXMuanNvbih7IGVycm9yOiBcIkV4cGVjdGVkIHB1enpsZSB0byBiZSA4MSBjaGFyYWN0ZXJzIGxvbmdcIiB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKC9bXjAtOS5dL2cudGVzdChwdXp6bGUpKSB7XG4gICAgICByZXMuanNvbih7IGVycm9yOiBcIkludmFsaWQgY2hhcmFjdGVycyBpbiBwdXp6bGVcIiB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHZhbGlkQ29sID0gc29sdmVyLmNoZWNrQ29sUGxhY2VtZW50KHB1enpsZSwgcm93LCBjb2x1bW4sIHZhbHVlKTtcbiAgICBsZXQgdmFsaWRSZWcgPSBzb2x2ZXIuY2hlY2tSZWdpb25QbGFjZW1lbnQocHV6emxlLCByb3csIGNvbHVtbiwgdmFsdWUpO1xuICAgIGxldCB2YWxpZFJvdyA9IHNvbHZlci5jaGVja1Jvd1BsYWNlbWVudChwdXp6bGUsIHJvdywgY29sdW1uLCB2YWx1ZSk7XG4gICAgbGV0IGNvbmZsaWN0cyA9IFtdO1xuICAgIGlmICh2YWxpZENvbCAmJiB2YWxpZFJlZyAmJiB2YWxpZFJvdykge1xuICAgICAgcmVzLmpzb24oeyB2YWxpZDogdHJ1ZSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCF2YWxpZFJvdykge1xuICAgICAgICBjb25mbGljdHMucHVzaChcInJvd1wiKTtcbiAgICAgIH1cbiAgICAgIGlmICghdmFsaWRDb2wpIHtcbiAgICAgICAgY29uZmxpY3RzLnB1c2goXCJjb2x1bW5cIik7XG4gICAgICB9XG4gICAgICBpZiAoIXZhbGlkUmVnKSB7XG4gICAgICAgIGNvbmZsaWN0cy5wdXNoKFwicmVnaW9uXCIpO1xuICAgICAgfVxuICAgICAgcmVzLmpzb24oeyB2YWxpZDogZmFsc2UsIGNvbmZsaWN0OiBjb25mbGljdHMgfSk7XG4gICAgfVxuICB9KTtcblxuICBhcHAucm91dGUoXCIvYXBpL3NvbHZlXCIpLnBvc3QoKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBwdXp6bGUgfSA9IHJlcS5ib2R5O1xuICAgIGlmICghcHV6emxlKSB7XG4gICAgICByZXMuanNvbih7IGVycm9yOiBcIlJlcXVpcmVkIGZpZWxkIG1pc3NpbmdcIiB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHB1enpsZS5sZW5ndGggIT0gODEpIHtcbiAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiRXhwZWN0ZWQgcHV6emxlIHRvIGJlIDgxIGNoYXJhY3RlcnMgbG9uZ1wiIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoL1teMC05Ll0vZy50ZXN0KHB1enpsZSkpIHtcbiAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiSW52YWxpZCBjaGFyYWN0ZXJzIGluIHB1enpsZVwiIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgc29sdmVkU3RyaW5nID0gc29sdmVyLnNvbHZlKHB1enpsZSk7XG4gICAgaWYgKCFzb2x2ZWRTdHJpbmcpIHtcbiAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiUHV6emxlIGNhbm5vdCBiZSBzb2x2ZWRcIiB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLmpzb24oeyBzb2x1dGlvbjogc29sdmVkU3RyaW5nIH0pO1xuICAgIH1cbiAgfSk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "SudokuSolver",
        "require",
        "module",
        "exports",
        "app",
        "solver",
        "route",
        "post",
        "req",
        "res",
        "body",
        "puzzle",
        "coordinate",
        "value",
        "json",
        "error",
        "row",
        "split",
        "column",
        "length",
        "test",
        "console",
        "log",
        "validValue",
        "checkValue",
        "validCol",
        "checkColPlacement",
        "validReg",
        "checkRegionPlacement",
        "validRow",
        "checkRowPlacement",
        "conflicts",
        "valid",
        "push",
        "conflict",
        "solvedString",
        "solve",
        "solution"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ky/repos/sudoku-solver/routes/",
      "sourcesContent": [
        "\"use strict\";\n\nconst SudokuSolver = require(\"../controllers/sudoku-solver.js\");\n\nmodule.exports = function (app) {\n  let solver = new SudokuSolver();\n\n  app.route(\"/api/check\").post((req, res) => {\n    const { puzzle, coordinate, value } = req.body;\n    if (!puzzle || !coordinate || !value) {\n      res.json({ error: \"Required field(s) missing\" });\n      return;\n    }\n    const row = coordinate.split(\"\")[0];\n    const column = coordinate.split(\"\")[1];\n    if (\n      coordinate.length !== 2 ||\n      !/[a-i]/i.test(row) ||\n      !/[1-9]/i.test(column)\n    ) {\n      console.log(\"invalid coordinate :>> \");\n      res.json({ error: \"Invalid coordinate\" });\n      return;\n    }\n    let validValue = solver.checkValue(value)\n    //if (!/[1-9]/.test(value)) {\n    if (!validValue) {\n      res.json({ error: \"Invalid value\" });\n      return;\n    }\n    if (puzzle.length != 81) {\n      res.json({ error: \"Expected puzzle to be 81 characters long\" });\n      return;\n    }\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({ error: \"Invalid characters in puzzle\" });\n      return;\n    }\n    let validCol = solver.checkColPlacement(puzzle, row, column, value);\n    let validReg = solver.checkRegionPlacement(puzzle, row, column, value);\n    let validRow = solver.checkRowPlacement(puzzle, row, column, value);\n    let conflicts = [];\n    if (validCol && validReg && validRow) {\n      res.json({ valid: true });\n    } else {\n      if (!validRow) {\n        conflicts.push(\"row\");\n      }\n      if (!validCol) {\n        conflicts.push(\"column\");\n      }\n      if (!validReg) {\n        conflicts.push(\"region\");\n      }\n      res.json({ valid: false, conflict: conflicts });\n    }\n  });\n\n  app.route(\"/api/solve\").post((req, res) => {\n    const { puzzle } = req.body;\n    if (!puzzle) {\n      res.json({ error: \"Required field missing\" });\n      return;\n    }\n    if (puzzle.length != 81) {\n      res.json({ error: \"Expected puzzle to be 81 characters long\" });\n      return;\n    }\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({ error: \"Invalid characters in puzzle\" });\n      return;\n    }\n    let solvedString = solver.solve(puzzle);\n    if (!solvedString) {\n      res.json({ error: \"Puzzle cannot be solved\" });\n    } else {\n      res.json({ solution: solvedString });\n    }\n  });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1672678061174
  },
  "{\"sourceRoot\":\"/home/ky/repos/sudoku-solver/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ky/repos/sudoku-solver\",\"filename\":\"/home/ky/repos/sudoku-solver/controllers/sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/ky/repos/sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ky/repos/sudoku-solver/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ky/repos/sudoku-solver",
      "filename": "/home/ky/repos/sudoku-solver/controllers/sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/ky/repos/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ky/repos/sudoku-solver/controllers/sudoku-solver.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ky/repos/sudoku-solver/controllers/sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ky/repos/sudoku-solver/controllers/",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SudokuSolver = /*#__PURE__*/function () {\n  function SudokuSolver() {\n    _classCallCheck(this, SudokuSolver);\n  }\n\n  _createClass(SudokuSolver, [{\n    key: \"checkValue\",\n    value: function checkValue(value) {\n      return /^[1-9]$/.test(+value);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(puzzleString) {}\n  }, {\n    key: \"letterToNumber\",\n    value: function letterToNumber(row) {\n      switch (row.toUpperCase()) {\n        case \"A\":\n          return 1;\n\n        case \"B\":\n          return 2;\n\n        case \"C\":\n          return 3;\n\n        case \"D\":\n          return 4;\n\n        case \"E\":\n          return 5;\n\n        case \"F\":\n          return 6;\n\n        case \"G\":\n          return 7;\n\n        case \"H\":\n          return 8;\n\n        case \"I\":\n          return 9;\n\n        default:\n          return \"none\";\n      }\n    }\n  }, {\n    key: \"checkRowPlacement\",\n    value: function checkRowPlacement(puzzleString, row, column, value) {\n      var grid = this.transform(puzzleString);\n      row = this.letterToNumber(row); //if (grid[row - 1][column - 1] !== 0) {\n      //  return false;\n      //}\n\n      if (grid[row - 1][column - 1] == value) {\n        return true;\n      }\n\n      for (var i = 0; i < 9; i++) {\n        if (grid[row - 1][i] == value) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkColPlacement\",\n    value: function checkColPlacement(puzzleString, row, column, value) {\n      var grid = this.transform(puzzleString);\n      row = this.letterToNumber(row); //if (grid[row - 1][column - 1] !== 0) {\n      //  return false;\n      //}\n\n      if (grid[row - 1][column - 1] == value) {\n        return true;\n      }\n\n      for (var i = 0; i < 9; i++) {\n        if (grid[i][column - 1] == value) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkRegionPlacement\",\n    value: function checkRegionPlacement(puzzleString, row, col, value) {\n      var grid = this.transform(puzzleString);\n      row = this.letterToNumber(row); //if (grid[row - 1][col - 1] !== 0) {\n      //  return false;\n      //}\n\n      if (grid[row - 1][col - 1] == value) {\n        return true;\n      }\n\n      var startRow = row - row % 3,\n          startCol = col - col % 3;\n\n      for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 3; j++) {\n          if (grid[i + startRow][j + startCol] == value) return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"solveSuduko\",\n    value: function solveSuduko(grid, row, col) {\n      var N = 9;\n      if (row == N - 1 && col == N) return grid;\n\n      if (col == N) {\n        row++;\n        col = 0;\n      }\n\n      if (grid[row][col] != 0) return this.solveSuduko(grid, row, col + 1);\n\n      for (var num = 1; num < 10; num++) {\n        if (this.isSafe(grid, row, col, num)) {\n          grid[row][col] = num;\n          if (this.solveSuduko(grid, row, col + 1)) return grid;\n        }\n\n        grid[row][col] = 0;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isSafe\",\n    value: function isSafe(grid, row, col, num) {\n      // Check if we find the same num\n      // in the similar row , we\n      // return false\n      for (var x = 0; x <= 8; x++) {\n        if (grid[row][x] == num) return false;\n      } // Check if we find the same num\n      // in the similar column ,\n      // we return false\n\n\n      for (var _x = 0; _x <= 8; _x++) {\n        if (grid[_x][col] == num) return false;\n      } // Check if we find the same num\n      // in the particular 3*3\n      // matrix, we return false\n\n\n      var startRow = row - row % 3,\n          startCol = col - col % 3;\n\n      for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 3; j++) {\n          if (grid[i + startRow][j + startCol] == num) return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(puzzleString) {\n      // take ..53..23.23. => [[0,0,5,3,0,0,2,3,0],\n      // [2,3,0]\n      var grid = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n      var row = -1;\n      var col = 0;\n\n      for (var i = 0; i < puzzleString.length; i++) {\n        if (i % 9 == 0) {\n          row++;\n        }\n\n        if (col % 9 == 0) {\n          col = 0;\n        }\n\n        grid[row][col] = puzzleString[i] === \".\" ? 0 : +puzzleString[i];\n        col++;\n      }\n\n      return grid;\n    }\n  }, {\n    key: \"transformBack\",\n    value: function transformBack(grid) {\n      return grid.flat().join(\"\");\n    }\n  }, {\n    key: \"solve\",\n    value: function solve(puzzleString) {\n      if (puzzleString.length != 81) {\n        return false;\n      }\n\n      if (/[^0-9.]/g.test(puzzleString)) {\n        return false;\n      }\n\n      var grid = this.transform(puzzleString);\n      var solved = this.solveSuduko(grid, 0, 0);\n\n      if (!solved) {\n        return false;\n      }\n\n      var solvedString = this.transformBack(solved);\n      console.log(\"solvedString :>> \", solvedString);\n      return solvedString;\n    }\n  }]);\n\n  return SudokuSolver;\n}();\n\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "SudokuSolver",
        "value",
        "test",
        "puzzleString",
        "row",
        "toUpperCase",
        "column",
        "grid",
        "transform",
        "letterToNumber",
        "i",
        "col",
        "startRow",
        "startCol",
        "j",
        "N",
        "solveSuduko",
        "num",
        "isSafe",
        "x",
        "length",
        "flat",
        "join",
        "solved",
        "solvedString",
        "transformBack",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;IAAMA,Y;;;;;;;+BAEOC,K,EAAO;AAChB,aAAO,UAAUC,IAAV,CAAe,CAACD,KAAhB,CAAP;AACD;;;6BACQE,Y,EAAc,CAAE;;;mCAEVC,G,EAAK;AAClB,cAAQA,GAAG,CAACC,WAAJ,EAAR;AACE,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;;AACF;AACE,iBAAO,MAAP;AApBJ;AAsBD;;;sCAEiBF,Y,EAAcC,G,EAAKE,M,EAAQL,K,EAAO;AAClD,UAAIM,IAAI,GAAG,KAAKC,SAAL,CAAeL,YAAf,CAAX;AACAC,MAAAA,GAAG,GAAG,KAAKK,cAAL,CAAoBL,GAApB,CAAN,CAFkD,CAGlD;AACA;AACA;;AACA,UAAIG,IAAI,CAACH,GAAG,GAAG,CAAP,CAAJ,CAAcE,MAAM,GAAG,CAAvB,KAA6BL,KAAjC,EAAwC;AACtC,eAAO,IAAP;AACD;;AACD,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIH,IAAI,CAACH,GAAG,GAAG,CAAP,CAAJ,CAAcM,CAAd,KAAoBT,KAAxB,EAA+B;AAC7B,iBAAO,KAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD;;;sCAEiBE,Y,EAAcC,G,EAAKE,M,EAAQL,K,EAAO;AAClD,UAAIM,IAAI,GAAG,KAAKC,SAAL,CAAeL,YAAf,CAAX;AACAC,MAAAA,GAAG,GAAG,KAAKK,cAAL,CAAoBL,GAApB,CAAN,CAFkD,CAGlD;AACA;AACA;;AACA,UAAIG,IAAI,CAACH,GAAG,GAAG,CAAP,CAAJ,CAAcE,MAAM,GAAG,CAAvB,KAA6BL,KAAjC,EAAwC;AACtC,eAAO,IAAP;AACD;;AACD,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIH,IAAI,CAACG,CAAD,CAAJ,CAAQJ,MAAM,GAAG,CAAjB,KAAuBL,KAA3B,EAAkC;AAChC,iBAAO,KAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD;;;yCAEoBE,Y,EAAcC,G,EAAKO,G,EAAKV,K,EAAO;AAClD,UAAIM,IAAI,GAAG,KAAKC,SAAL,CAAeL,YAAf,CAAX;AACAC,MAAAA,GAAG,GAAG,KAAKK,cAAL,CAAoBL,GAApB,CAAN,CAFkD,CAGlD;AACA;AACA;;AACA,UAAIG,IAAI,CAACH,GAAG,GAAG,CAAP,CAAJ,CAAcO,GAAG,GAAG,CAApB,KAA0BV,KAA9B,EAAqC;AACnC,eAAO,IAAP;AACD;;AAED,UAAIW,QAAQ,GAAGR,GAAG,GAAIA,GAAG,GAAG,CAA5B;AAAA,UACES,QAAQ,GAAGF,GAAG,GAAIA,GAAG,GAAG,CAD1B;;AAEA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB;AACE,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB;AACE,cAAIP,IAAI,CAACG,CAAC,GAAGE,QAAL,CAAJ,CAAmBE,CAAC,GAAGD,QAAvB,KAAoCZ,KAAxC,EAA+C,OAAO,KAAP;AADjD;AADF;;AAGA,aAAO,IAAP;AACD;;;gCAEWM,I,EAAMH,G,EAAKO,G,EAAK;AAC1B,UAAMI,CAAC,GAAG,CAAV;AAEA,UAAIX,GAAG,IAAIW,CAAC,GAAG,CAAX,IAAgBJ,GAAG,IAAII,CAA3B,EAA8B,OAAOR,IAAP;;AAE9B,UAAII,GAAG,IAAII,CAAX,EAAc;AACZX,QAAAA,GAAG;AACHO,QAAAA,GAAG,GAAG,CAAN;AACD;;AAED,UAAIJ,IAAI,CAACH,GAAD,CAAJ,CAAUO,GAAV,KAAkB,CAAtB,EAAyB,OAAO,KAAKK,WAAL,CAAiBT,IAAjB,EAAuBH,GAAvB,EAA4BO,GAAG,GAAG,CAAlC,CAAP;;AAEzB,WAAK,IAAIM,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjC,YAAI,KAAKC,MAAL,CAAYX,IAAZ,EAAkBH,GAAlB,EAAuBO,GAAvB,EAA4BM,GAA5B,CAAJ,EAAsC;AACpCV,UAAAA,IAAI,CAACH,GAAD,CAAJ,CAAUO,GAAV,IAAiBM,GAAjB;AAEA,cAAI,KAAKD,WAAL,CAAiBT,IAAjB,EAAuBH,GAAvB,EAA4BO,GAAG,GAAG,CAAlC,CAAJ,EAA0C,OAAOJ,IAAP;AAC3C;;AAEDA,QAAAA,IAAI,CAACH,GAAD,CAAJ,CAAUO,GAAV,IAAiB,CAAjB;AACD;;AACD,aAAO,KAAP;AACD;;;2BAEMJ,I,EAAMH,G,EAAKO,G,EAAKM,G,EAAK;AAC1B;AACA;AACA;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB;AAA6B,YAAIZ,IAAI,CAACH,GAAD,CAAJ,CAAUe,CAAV,KAAgBF,GAApB,EAAyB,OAAO,KAAP;AAAtD,OAJ0B,CAM1B;AACA;AACA;;;AACA,WAAK,IAAIE,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAI,CAArB,EAAwBA,EAAC,EAAzB;AAA6B,YAAIZ,IAAI,CAACY,EAAD,CAAJ,CAAQR,GAAR,KAAgBM,GAApB,EAAyB,OAAO,KAAP;AAAtD,OAT0B,CAW1B;AACA;AACA;;;AACA,UAAIL,QAAQ,GAAGR,GAAG,GAAIA,GAAG,GAAG,CAA5B;AAAA,UACES,QAAQ,GAAGF,GAAG,GAAIA,GAAG,GAAG,CAD1B;;AAEA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB;AACE,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB;AACE,cAAIP,IAAI,CAACG,CAAC,GAAGE,QAAL,CAAJ,CAAmBE,CAAC,GAAGD,QAAvB,KAAoCI,GAAxC,EAA6C,OAAO,KAAP;AAD/C;AADF;;AAIA,aAAO,IAAP;AACD;;;8BAESd,Y,EAAc;AACtB;AACA;AACA,UAAII,IAAI,GAAG,CACT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CADS,EAET,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAFS,EAGT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAHS,EAIT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAJS,EAKT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CALS,EAMT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CANS,EAOT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAPS,EAQT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CARS,EAST,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CATS,CAAX;AAWA,UAAIH,GAAG,GAAG,CAAC,CAAX;AACA,UAAIO,GAAG,GAAG,CAAV;;AACA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,YAAY,CAACiB,MAAjC,EAAyCV,CAAC,EAA1C,EAA8C;AAC5C,YAAIA,CAAC,GAAG,CAAJ,IAAS,CAAb,EAAgB;AACdN,UAAAA,GAAG;AACJ;;AACD,YAAIO,GAAG,GAAG,CAAN,IAAW,CAAf,EAAkB;AAChBA,UAAAA,GAAG,GAAG,CAAN;AACD;;AAEDJ,QAAAA,IAAI,CAACH,GAAD,CAAJ,CAAUO,GAAV,IAAiBR,YAAY,CAACO,CAAD,CAAZ,KAAoB,GAApB,GAA0B,CAA1B,GAA8B,CAACP,YAAY,CAACO,CAAD,CAA5D;AACAC,QAAAA,GAAG;AACJ;;AACD,aAAOJ,IAAP;AACD;;;kCAEaA,I,EAAM;AAClB,aAAOA,IAAI,CAACc,IAAL,GAAYC,IAAZ,CAAiB,EAAjB,CAAP;AACD;;;0BAEKnB,Y,EAAc;AAClB,UAAIA,YAAY,CAACiB,MAAb,IAAuB,EAA3B,EAA+B;AAC7B,eAAO,KAAP;AACD;;AACD,UAAI,WAAWlB,IAAX,CAAgBC,YAAhB,CAAJ,EAAmC;AACjC,eAAO,KAAP;AACD;;AACD,UAAII,IAAI,GAAG,KAAKC,SAAL,CAAeL,YAAf,CAAX;AACA,UAAIoB,MAAM,GAAG,KAAKP,WAAL,CAAiBT,IAAjB,EAAuB,CAAvB,EAA0B,CAA1B,CAAb;;AACA,UAAI,CAACgB,MAAL,EAAa;AACX,eAAO,KAAP;AACD;;AACD,UAAIC,YAAY,GAAG,KAAKC,aAAL,CAAmBF,MAAnB,CAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,YAAjC;AACA,aAAOA,YAAP;AACD;;;;;;AAGHI,MAAM,CAACC,OAAP,GAAiB7B,YAAjB",
      "sourceRoot": "/home/ky/repos/sudoku-solver/controllers/",
      "sourcesContent": [
        "class SudokuSolver {\n\n  checkValue(value) {\n    return /^[1-9]$/.test(+value);\n  }\n  validate(puzzleString) {}\n\n  letterToNumber(row) {\n    switch (row.toUpperCase()) {\n      case \"A\":\n        return 1;\n      case \"B\":\n        return 2;\n      case \"C\":\n        return 3;\n      case \"D\":\n        return 4;\n      case \"E\":\n        return 5;\n      case \"F\":\n        return 6;\n      case \"G\":\n        return 7;\n      case \"H\":\n        return 8;\n      case \"I\":\n        return 9;\n      default:\n        return \"none\";\n    }\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    //if (grid[row - 1][column - 1] !== 0) {\n    //  return false;\n    //}\n    if (grid[row - 1][column - 1] == value) {\n      return true;\n    }\n    for (let i = 0; i < 9; i++) {\n      if (grid[row - 1][i] == value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    //if (grid[row - 1][column - 1] !== 0) {\n    //  return false;\n    //}\n    if (grid[row - 1][column - 1] == value) {\n      return true;\n    }\n    for (let i = 0; i < 9; i++) {\n      if (grid[i][column - 1] == value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  checkRegionPlacement(puzzleString, row, col, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    //if (grid[row - 1][col - 1] !== 0) {\n    //  return false;\n    //}\n    if (grid[row - 1][col - 1] == value) {\n      return true;\n    }\n    \n    let startRow = row - (row % 3),\n      startCol = col - (col % 3);\n    for (let i = 0; i < 3; i++)\n      for (let j = 0; j < 3; j++)\n        if (grid[i + startRow][j + startCol] == value) return false;\n    return true;\n  }\n\n  solveSuduko(grid, row, col) {\n    const N = 9;\n\n    if (row == N - 1 && col == N) return grid;\n\n    if (col == N) {\n      row++;\n      col = 0;\n    }\n\n    if (grid[row][col] != 0) return this.solveSuduko(grid, row, col + 1);\n\n    for (let num = 1; num < 10; num++) {\n      if (this.isSafe(grid, row, col, num)) {\n        grid[row][col] = num;\n\n        if (this.solveSuduko(grid, row, col + 1)) return grid;\n      }\n\n      grid[row][col] = 0;\n    }\n    return false;\n  }\n\n  isSafe(grid, row, col, num) {\n    // Check if we find the same num\n    // in the similar row , we\n    // return false\n    for (let x = 0; x <= 8; x++) if (grid[row][x] == num) return false;\n\n    // Check if we find the same num\n    // in the similar column ,\n    // we return false\n    for (let x = 0; x <= 8; x++) if (grid[x][col] == num) return false;\n\n    // Check if we find the same num\n    // in the particular 3*3\n    // matrix, we return false\n    let startRow = row - (row % 3),\n      startCol = col - (col % 3);\n    for (let i = 0; i < 3; i++)\n      for (let j = 0; j < 3; j++)\n        if (grid[i + startRow][j + startCol] == num) return false;\n\n    return true;\n  }\n\n  transform(puzzleString) {\n    // take ..53..23.23. => [[0,0,5,3,0,0,2,3,0],\n    // [2,3,0]\n    let grid = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ];\n    let row = -1;\n    let col = 0;\n    for (let i = 0; i < puzzleString.length; i++) {\n      if (i % 9 == 0) {\n        row++;\n      }\n      if (col % 9 == 0) {\n        col = 0;\n      }\n\n      grid[row][col] = puzzleString[i] === \".\" ? 0 : +puzzleString[i];\n      col++;\n    }\n    return grid;\n  }\n\n  transformBack(grid) {\n    return grid.flat().join(\"\");\n  }\n\n  solve(puzzleString) {\n    if (puzzleString.length != 81) {\n      return false;\n    }\n    if (/[^0-9.]/g.test(puzzleString)) {\n      return false;\n    }\n    let grid = this.transform(puzzleString);\n    let solved = this.solveSuduko(grid, 0, 0);\n    if (!solved) {\n      return false;\n    }\n    let solvedString = this.transformBack(solved);\n    console.log(\"solvedString :>> \", solvedString);\n    return solvedString;\n  }\n}\n\nmodule.exports = SudokuSolver;"
      ]
    },
    "sourceType": "script",
    "mtime": 1672678286448
  },
  "{\"sourceRoot\":\"/home/ky/repos/Sudoku-solverFCC/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ky/repos/Sudoku-solverFCC\",\"filename\":\"/home/ky/repos/Sudoku-solverFCC/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/ky/repos/Sudoku-solverFCC\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ky/repos/Sudoku-solverFCC/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ky/repos/Sudoku-solverFCC",
      "filename": "/home/ky/repos/Sudoku-solverFCC/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/ky/repos/Sudoku-solverFCC",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ky/repos/Sudoku-solverFCC/routes/api.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/ky/repos/Sudoku-solverFCC/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ky/repos/Sudoku-solverFCC/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst SudokuSolver = require(\"../controllers/sudoku-solver.js\");\n\nmodule.exports = function (app) {\n  let solver = new SudokuSolver();\n  app.route(\"/api/check\").post((req, res) => {\n    const {\n      puzzle,\n      coordinate,\n      value\n    } = req.body;\n\n    if (!puzzle || !coordinate || !value) {\n      res.json({\n        error: \"Required field(s) missing\"\n      });\n      return;\n    }\n\n    const row = coordinate.split(\"\")[0];\n    const column = coordinate.split(\"\")[1];\n\n    if (coordinate.length !== 2 || !/[a-i]/i.test(row) || !/[1-9]/i.test(column)) {\n      console.log(\"invalid coordinate :>> \");\n      res.json({\n        error: \"Invalid coordinate\"\n      });\n      return;\n    }\n\n    let validValue = solver.checkValue(value); //if (!/[1-9]/.test(value)) {\n\n    if (!validValue) {\n      res.json({\n        error: \"Invalid value\"\n      });\n      return;\n    }\n\n    if (puzzle.length != 81) {\n      res.json({\n        error: \"Expected puzzle to be 81 characters long\"\n      });\n      return;\n    }\n\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({\n        error: \"Invalid characters in puzzle\"\n      });\n      return;\n    }\n\n    let validCol = solver.checkColPlacement(puzzle, row, column, value);\n    let validReg = solver.checkRegionPlacement(puzzle, row, column, value);\n    let validRow = solver.checkRowPlacement(puzzle, row, column, value);\n    let conflicts = [];\n\n    if (validCol && validReg && validRow) {\n      res.json({\n        valid: true\n      });\n    } else {\n      if (!validRow) {\n        conflicts.push(\"row\");\n      }\n\n      if (!validCol) {\n        conflicts.push(\"column\");\n      }\n\n      if (!validReg) {\n        conflicts.push(\"region\");\n      }\n\n      res.json({\n        valid: false,\n        conflict: conflicts\n      });\n    }\n  });\n  app.route(\"/api/solve\").post((req, res) => {\n    const {\n      puzzle\n    } = req.body;\n\n    if (!puzzle) {\n      res.json({\n        error: \"Required field missing\"\n      });\n      return;\n    }\n\n    if (puzzle.length != 81) {\n      res.json({\n        error: \"Expected puzzle to be 81 characters long\"\n      });\n      return;\n    }\n\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({\n        error: \"Invalid characters in puzzle\"\n      });\n      return;\n    }\n\n    let solvedString = solver.solve(puzzle);\n\n    if (!solvedString) {\n      res.json({\n        error: \"Puzzle cannot be solved\"\n      });\n    } else {\n      res.json({\n        solution: solvedString\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJTdWRva3VTb2x2ZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInNvbHZlciIsInJvdXRlIiwicG9zdCIsInJlcSIsInJlcyIsInB1enpsZSIsImNvb3JkaW5hdGUiLCJ2YWx1ZSIsImJvZHkiLCJqc29uIiwiZXJyb3IiLCJyb3ciLCJzcGxpdCIsImNvbHVtbiIsImxlbmd0aCIsInRlc3QiLCJjb25zb2xlIiwibG9nIiwidmFsaWRWYWx1ZSIsImNoZWNrVmFsdWUiLCJ2YWxpZENvbCIsImNoZWNrQ29sUGxhY2VtZW50IiwidmFsaWRSZWciLCJjaGVja1JlZ2lvblBsYWNlbWVudCIsInZhbGlkUm93IiwiY2hlY2tSb3dQbGFjZW1lbnQiLCJjb25mbGljdHMiLCJ2YWxpZCIsInB1c2giLCJjb25mbGljdCIsInNvbHZlZFN0cmluZyIsInNvbHZlIiwic29sdXRpb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFlBQVksR0FBR0MsT0FBTyxDQUFDLGlDQUFELENBQTVCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlO0FBQzlCLE1BQUlDLE1BQU0sR0FBRyxJQUFJTCxZQUFKLEVBQWI7QUFFQUksRUFBQUEsR0FBRyxDQUFDRSxLQUFKLENBQVUsWUFBVixFQUF3QkMsSUFBeEIsQ0FBNkIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDekMsVUFBTTtBQUFFQyxNQUFBQSxNQUFGO0FBQVVDLE1BQUFBLFVBQVY7QUFBc0JDLE1BQUFBO0FBQXRCLFFBQWdDSixHQUFHLENBQUNLLElBQTFDOztBQUNBLFFBQUksQ0FBQ0gsTUFBRCxJQUFXLENBQUNDLFVBQVosSUFBMEIsQ0FBQ0MsS0FBL0IsRUFBc0M7QUFDcENILE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFULE9BQVQ7QUFDQTtBQUNEOztBQUNELFVBQU1DLEdB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UUFBSUwsTUFBTSxDQUFDUyxNQUFQLElBQWlCLEVBQXJCLEVBQXlCO0FBQ3ZCVixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFUO0FBQ0E7QUFDRDs7QUFDRCxRQUFJLFdBQVdLLElBQVgsQ0FBZ0JWLE1BQWhCLENBQUosRUFBNkI7QUFDM0JELE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFULE9BQVQ7QUFDQTtBQUNEOztBQUNELFFBQUlvQixZQUFZLEdBQUc5QixNQUFNLENBQUMrQixLQUFQLENBQWExQixNQUFiLENBQW5COztBQUNBLFFBQUksQ0FBQ3lCLFlBQUwsRUFBbUI7QUFDakIxQixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFUO0FBQ0QsS0FGRCxNQUVPO0FBQ0xOLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQUV1QixRQUFBQSxRQUFRLEVBQUVGO0FBQVosT0FBVDtBQUNEO0FBQ0YsR0FwQkQ7QUFxQkQsQ0EzRUQiLCJzb3VyY2VSb290IjoiL2hvbWUva3kvcmVwb3MvU3Vkb2t1LXNvbHZlckZDQy9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IFN1ZG9rdVNvbHZlciA9IHJlcXVpcmUoXCIuLi9jb250cm9sbGVycy9zdWRva3Utc29sdmVyLmpzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcHApIHtcbiAgbGV0IHNvbHZlciA9IG5ldyBTdWRva3VTb2x2ZXIoKTtcblxuICBhcHAucm91dGUoXCIvYXBpL2NoZWNrXCIpLnBvc3QoKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBwdXp6bGUsIGNvb3JkaW5hdGUsIHZhbHVlIH0gPSByZXEuYm9keTtcbiAgICBpZiAoIXB1enpsZSB8fCAhY29vcmRpbmF0ZSB8fCAhdmFsdWUpIHtcbiAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiUmVxdWlyZWQgZmllbGQocykgbWlzc2luZ1wiIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByb3cgPSBjb29yZGluYXRlLnNwbGl0KFwiXCIpWzBdO1xuICAgIGNvbnN0IGNvbHVtbiA9IGNvb3JkaW5hdGUuc3BsaXQoXCJcIilbMV07XG4gICAgaWYgKFxuICAgICAgY29vcmRpbmF0ZS5sZW5ndGggIT09IDIgfHxcbiAgICAgICEvW2EtaV0vaS50ZXN0KHJvdykgfHxcbiAgICAgICEvWzEtOV0vaS50ZXN0KGNvbHVtbilcbiAgICApIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiaW52YWxpZCBjb29yZGluYXRlIDo+PiBcIik7XG4gICAgICByZXMuanNvbih7IGVycm9yOiBcIkludmFsaWQgY29vcmRpbmF0ZVwiIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgdmFsaWRWYWx1ZSA9IHNvbHZlci5jaGVja1ZhbHVlKHZhbHVlKVxuICAgIC8vaWYgKCEvWzEtOV0vLnRlc3QodmFsdWUpKSB7XG4gICAgaWYgKCF2YWxpZFZhbHVlKSB7XG4gICAgICByZXMuanNvbih7IGVycm9yOiBcIkludmFsaWQgdmFsdWVcIiB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHB1enpsZS5sZW5ndGggIT0gODEpIHtcbiAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiRXhwZWN0ZWQgcHV6emxlIHRvIGJlIDgxIGNoYXJhY3RlcnMgbG9uZ1wiIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoL1teMC05Ll0vZy50ZXN0KHB1enpsZSkpIHtcbiAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiSW52YWxpZCBjaGFyYWN0ZXJzIGluIHB1enpsZVwiIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgdmFsaWRDb2wgPSBzb2x2ZXIuY2hlY2tDb2xQbGFjZW1lbnQocHV6emxlLCByb3csIGNvbHVtbiwgdmFsdWUpO1xuICAgIGxldCB2YWxpZFJlZyA9IHNvbHZlci5jaGVja1JlZ2lvblBsYWNlbWVudChwdXp6bGUsIHJvdywgY29sdW1uLCB2YWx1ZSk7XG4gICAgbGV0IHZhbGlkUm93ID0gc29sdmVyLmNoZWNrUm93UGxhY2VtZW50KHB1enpsZSwgcm93LCBjb2x1bW4sIHZhbHVlKTtcbiAgICBsZXQgY29uZmxpY3RzID0gW107XG4gICAgaWYgKHZhbGlkQ29sICYmIHZhbGlkUmVnICYmIHZhbGlkUm93KSB7XG4gICAgICByZXMuanNvbih7IHZhbGlkOiB0cnVlIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoIXZhbGlkUm93KSB7XG4gICAgICAgIGNvbmZsaWN0cy5wdXNoKFwicm93XCIpO1xuICAgICAgfVxuICAgICAgaWYgKCF2YWxpZENvbCkge1xuICAgICAgICBjb25mbGljdHMucHVzaChcImNvbHVtblwiKTtcbiAgICAgIH1cbiAgICAgIGlmICghdmFsaWRSZWcpIHtcbiAgICAgICAgY29uZmxpY3RzLnB1c2goXCJyZWdpb25cIik7XG4gICAgICB9XG4gICAgICByZXMuanNvbih7IHZhbGlkOiBmYWxzZSwgY29uZmxpY3Q6IGNvbmZsaWN0cyB9KTtcbiAgICB9XG4gIH0pO1xuXG4gIGFwcC5yb3V0ZShcIi9hcGkvc29sdmVcIikucG9zdCgocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IHB1enpsZSB9ID0gcmVxLmJvZHk7XG4gICAgaWYgKCFwdXp6bGUpIHtcbiAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiUmVxdWlyZWQgZmllbGQgbWlzc2luZ1wiIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAocHV6emxlLmxlbmd0aCAhPSA4MSkge1xuICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJFeHBlY3RlZCBwdXp6bGUgdG8gYmUgODEgY2hhcmFjdGVycyBsb25nXCIgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICgvW14wLTkuXS9nLnRlc3QocHV6emxlKSkge1xuICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJJbnZhbGlkIGNoYXJhY3RlcnMgaW4gcHV6emxlXCIgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBzb2x2ZWRTdHJpbmcgPSBzb2x2ZXIuc29sdmUocHV6emxlKTtcbiAgICBpZiAoIXNvbHZlZFN0cmluZykge1xuICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJQdXp6bGUgY2Fubm90IGJlIHNvbHZlZFwiIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXMuanNvbih7IHNvbHV0aW9uOiBzb2x2ZWRTdHJpbmcgfSk7XG4gICAgfVxuICB9KTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "SudokuSolver",
        "require",
        "module",
        "exports",
        "app",
        "solver",
        "route",
        "post",
        "req",
        "res",
        "puzzle",
        "coordinate",
        "value",
        "body",
        "json",
        "error",
        "row",
        "split",
        "column",
        "length",
        "test",
        "console",
        "log",
        "validValue",
        "checkValue",
        "validCol",
        "checkColPlacement",
        "validReg",
        "checkRegionPlacement",
        "validRow",
        "checkRowPlacement",
        "conflicts",
        "valid",
        "push",
        "conflict",
        "solvedString",
        "solve",
        "solution"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ky/repos/Sudoku-solverFCC/routes/",
      "sourcesContent": [
        "\"use strict\";\n\nconst SudokuSolver = require(\"../controllers/sudoku-solver.js\");\n\nmodule.exports = function (app) {\n  let solver = new SudokuSolver();\n\n  app.route(\"/api/check\").post((req, res) => {\n    const { puzzle, coordinate, value } = req.body;\n    if (!puzzle || !coordinate || !value) {\n      res.json({ error: \"Required field(s) missing\" });\n      return;\n    }\n    const row = coordinate.split(\"\")[0];\n    const column = coordinate.split(\"\")[1];\n    if (\n      coordinate.length !== 2 ||\n      !/[a-i]/i.test(row) ||\n      !/[1-9]/i.test(column)\n    ) {\n      console.log(\"invalid coordinate :>> \");\n      res.json({ error: \"Invalid coordinate\" });\n      return;\n    }\n    let validValue = solver.checkValue(value)\n    //if (!/[1-9]/.test(value)) {\n    if (!validValue) {\n      res.json({ error: \"Invalid value\" });\n      return;\n    }\n    if (puzzle.length != 81) {\n      res.json({ error: \"Expected puzzle to be 81 characters long\" });\n      return;\n    }\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({ error: \"Invalid characters in puzzle\" });\n      return;\n    }\n    let validCol = solver.checkColPlacement(puzzle, row, column, value);\n    let validReg = solver.checkRegionPlacement(puzzle, row, column, value);\n    let validRow = solver.checkRowPlacement(puzzle, row, column, value);\n    let conflicts = [];\n    if (validCol && validReg && validRow) {\n      res.json({ valid: true });\n    } else {\n      if (!validRow) {\n        conflicts.push(\"row\");\n      }\n      if (!validCol) {\n        conflicts.push(\"column\");\n      }\n      if (!validReg) {\n        conflicts.push(\"region\");\n      }\n      res.json({ valid: false, conflict: conflicts });\n    }\n  });\n\n  app.route(\"/api/solve\").post((req, res) => {\n    const { puzzle } = req.body;\n    if (!puzzle) {\n      res.json({ error: \"Required field missing\" });\n      return;\n    }\n    if (puzzle.length != 81) {\n      res.json({ error: \"Expected puzzle to be 81 characters long\" });\n      return;\n    }\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({ error: \"Invalid characters in puzzle\" });\n      return;\n    }\n    let solvedString = solver.solve(puzzle);\n    if (!solvedString) {\n      res.json({ error: \"Puzzle cannot be solved\" });\n    } else {\n      res.json({ solution: solvedString });\n    }\n  });\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1672678061174
  },
  "{\"sourceRoot\":\"/home/ky/repos/Sudoku-solverFCC/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ky/repos/Sudoku-solverFCC\",\"filename\":\"/home/ky/repos/Sudoku-solverFCC/controllers/sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/ky/repos/Sudoku-solverFCC\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ky/repos/Sudoku-solverFCC/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ky/repos/Sudoku-solverFCC",
      "filename": "/home/ky/repos/Sudoku-solverFCC/controllers/sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/ky/repos/Sudoku-solverFCC",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ky/repos/Sudoku-solverFCC/controllers/sudoku-solver.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/ky/repos/Sudoku-solverFCC/controllers/sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ky/repos/Sudoku-solverFCC/controllers/",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "class SudokuSolver {\n  checkValue(value) {\n    return /^[1-9]$/.test(+value);\n  }\n\n  validate(puzzleString) {}\n\n  letterToNumber(row) {\n    switch (row.toUpperCase()) {\n      case \"A\":\n        return 1;\n\n      case \"B\":\n        return 2;\n\n      case \"C\":\n        return 3;\n\n      case \"D\":\n        return 4;\n\n      case \"E\":\n        return 5;\n\n      case \"F\":\n        return 6;\n\n      case \"G\":\n        return 7;\n\n      case \"H\":\n        return 8;\n\n      case \"I\":\n        return 9;\n\n      default:\n        return \"none\";\n    }\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row); //if (grid[row - 1][column - 1] !== 0) {\n    //  return false;\n    //}\n\n    if (grid[row - 1][column - 1] == value) {\n      return true;\n    }\n\n    for (let i = 0; i < 9; i++) {\n      if (grid[row - 1][i] == value) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row); //if (grid[row - 1][column - 1] !== 0) {\n    //  return false;\n    //}\n\n    if (grid[row - 1][column - 1] == value) {\n      return true;\n    }\n\n    for (let i = 0; i < 9; i++) {\n      if (grid[i][column - 1] == value) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  checkRegionPlacement(puzzleString, row, col, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row); //if (grid[row - 1][col - 1] !== 0) {\n    //  return false;\n    //}\n\n    if (grid[row - 1][col - 1] == value) {\n      return true;\n    }\n\n    let startRow = row - row % 3,\n        startCol = col - col % 3;\n\n    for (let i = 0; i < 3; i++) for (let j = 0; j < 3; j++) if (grid[i + startRow][j + startCol] == value) return false;\n\n    return true;\n  }\n\n  solveSuduko(grid, row, col) {\n    const N = 9;\n    if (row == N - 1 && col == N) return grid;\n\n    if (col == N) {\n      row++;\n      col = 0;\n    }\n\n    if (grid[row][col] != 0) return this.solveSuduko(grid, row, col + 1);\n\n    for (let num = 1; num < 10; num++) {\n      if (this.isSafe(grid, row, col, num)) {\n        grid[row][col] = num;\n        if (this.solveSuduko(grid, row, col + 1)) return grid;\n      }\n\n      grid[row][col] = 0;\n    }\n\n    return false;\n  }\n\n  isSafe(grid, row, col, num) {\n    // Check if we find the same num\n    // in the similar row , we\n    // return false\n    for (let x = 0; x <= 8; x++) if (grid[row][x] == num) return false; // Check if we find the same num\n    // in the similar column ,\n    // we return false\n\n\n    for (let x = 0; x <= 8; x++) if (grid[x][col] == num) return false; // Check if we find the same num\n    // in the particular 3*3\n    // matrix, we return false\n\n\n    let startRow = row - row % 3,\n        startCol = col - col % 3;\n\n    for (let i = 0; i < 3; i++) for (let j = 0; j < 3; j++) if (grid[i + startRow][j + startCol] == num) return false;\n\n    return true;\n  }\n\n  transform(puzzleString) {\n    // take ..53..23.23. => [[0,0,5,3,0,0,2,3,0],\n    // [2,3,0]\n    let grid = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n    let row = -1;\n    let col = 0;\n\n    for (let i = 0; i < puzzleString.length; i++) {\n      if (i % 9 == 0) {\n        row++;\n      }\n\n      if (col % 9 == 0) {\n        col = 0;\n      }\n\n      grid[row][col] = puzzleString[i] === \".\" ? 0 : +puzzleString[i];\n      col++;\n    }\n\n    return grid;\n  }\n\n  transformBack(grid) {\n    return grid.flat().join(\"\");\n  }\n\n  solve(puzzleString) {\n    if (puzzleString.length != 81) {\n      return false;\n    }\n\n    if (/[^0-9.]/g.test(puzzleString)) {\n      return false;\n    }\n\n    let grid = this.transform(puzzleString);\n    let solved = this.solveSuduko(grid, 0, 0);\n\n    if (!solved) {\n      return false;\n    }\n\n    let solvedString = this.transformBack(solved);\n    console.log(\"solvedString :>> \", solvedString);\n    return solvedString;\n  }\n\n}\n\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "SudokuSolver",
        "checkValue",
        "value",
        "test",
        "validate",
        "puzzleString",
        "letterToNumber",
        "row",
        "toUpperCase",
        "checkRowPlacement",
        "column",
        "grid",
        "transform",
        "i",
        "checkColPlacement",
        "checkRegionPlacement",
        "col",
        "startRow",
        "startCol",
        "j",
        "solveSuduko",
        "N",
        "num",
        "isSafe",
        "x",
        "length",
        "transformBack",
        "flat",
        "join",
        "solve",
        "solved",
        "solvedString",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ky/repos/Sudoku-solverFCC/controllers/",
      "sourcesContent": [
        "class SudokuSolver {\n\n  checkValue(value) {\n    return /^[1-9]$/.test(+value);\n  }\n  validate(puzzleString) {}\n\n  letterToNumber(row) {\n    switch (row.toUpperCase()) {\n      case \"A\":\n        return 1;\n      case \"B\":\n        return 2;\n      case \"C\":\n        return 3;\n      case \"D\":\n        return 4;\n      case \"E\":\n        return 5;\n      case \"F\":\n        return 6;\n      case \"G\":\n        return 7;\n      case \"H\":\n        return 8;\n      case \"I\":\n        return 9;\n      default:\n        return \"none\";\n    }\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    //if (grid[row - 1][column - 1] !== 0) {\n    //  return false;\n    //}\n    if (grid[row - 1][column - 1] == value) {\n      return true;\n    }\n    for (let i = 0; i < 9; i++) {\n      if (grid[row - 1][i] == value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    //if (grid[row - 1][column - 1] !== 0) {\n    //  return false;\n    //}\n    if (grid[row - 1][column - 1] == value) {\n      return true;\n    }\n    for (let i = 0; i < 9; i++) {\n      if (grid[i][column - 1] == value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  checkRegionPlacement(puzzleString, row, col, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    //if (grid[row - 1][col - 1] !== 0) {\n    //  return false;\n    //}\n    if (grid[row - 1][col - 1] == value) {\n      return true;\n    }\n    \n    let startRow = row - (row % 3),\n      startCol = col - (col % 3);\n    for (let i = 0; i < 3; i++)\n      for (let j = 0; j < 3; j++)\n        if (grid[i + startRow][j + startCol] == value) return false;\n    return true;\n  }\n\n  solveSuduko(grid, row, col) {\n    const N = 9;\n\n    if (row == N - 1 && col == N) return grid;\n\n    if (col == N) {\n      row++;\n      col = 0;\n    }\n\n    if (grid[row][col] != 0) return this.solveSuduko(grid, row, col + 1);\n\n    for (let num = 1; num < 10; num++) {\n      if (this.isSafe(grid, row, col, num)) {\n        grid[row][col] = num;\n\n        if (this.solveSuduko(grid, row, col + 1)) return grid;\n      }\n\n      grid[row][col] = 0;\n    }\n    return false;\n  }\n\n  isSafe(grid, row, col, num) {\n    // Check if we find the same num\n    // in the similar row , we\n    // return false\n    for (let x = 0; x <= 8; x++) if (grid[row][x] == num) return false;\n\n    // Check if we find the same num\n    // in the similar column ,\n    // we return false\n    for (let x = 0; x <= 8; x++) if (grid[x][col] == num) return false;\n\n    // Check if we find the same num\n    // in the particular 3*3\n    // matrix, we return false\n    let startRow = row - (row % 3),\n      startCol = col - (col % 3);\n    for (let i = 0; i < 3; i++)\n      for (let j = 0; j < 3; j++)\n        if (grid[i + startRow][j + startCol] == num) return false;\n\n    return true;\n  }\n\n  transform(puzzleString) {\n    // take ..53..23.23. => [[0,0,5,3,0,0,2,3,0],\n    // [2,3,0]\n    let grid = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ];\n    let row = -1;\n    let col = 0;\n    for (let i = 0; i < puzzleString.length; i++) {\n      if (i % 9 == 0) {\n        row++;\n      }\n      if (col % 9 == 0) {\n        col = 0;\n      }\n\n      grid[row][col] = puzzleString[i] === \".\" ? 0 : +puzzleString[i];\n      col++;\n    }\n    return grid;\n  }\n\n  transformBack(grid) {\n    return grid.flat().join(\"\");\n  }\n\n  solve(puzzleString) {\n    if (puzzleString.length != 81) {\n      return false;\n    }\n    if (/[^0-9.]/g.test(puzzleString)) {\n      return false;\n    }\n    let grid = this.transform(puzzleString);\n    let solved = this.solveSuduko(grid, 0, 0);\n    if (!solved) {\n      return false;\n    }\n    let solvedString = this.transformBack(solved);\n    console.log(\"solvedString :>> \", solvedString);\n    return solvedString;\n  }\n}\n\nmodule.exports = SudokuSolver;"
      ]
    },
    "sourceType": "module",
    "mtime": 1672678286448
  }
}